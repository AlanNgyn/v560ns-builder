name: AdHoc Mobile Build

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Build Branch"
        required: true
        default: "develop"
      environment:
        description: "Select environment (staging or live)"
        required: true
        default: "staging"

jobs:
  ios-adhoc:
    name: iOS AdHoc Build
    runs-on: macos-15
    steps:
      # Setup SSH for private repo
      - name: Create fastlane keychain
        run: |
          security create-keychain -p "" fastlane.keychain
          security default-keychain -s fastlane.keychain
          security unlock-keychain -p "" fastlane.keychain

      - name: Setup SSH for private repo
        run: |
          mkdir -p ~/.ssh
          cat << 'EOF' > ~/.ssh/id_rsa
          ${{ secrets.SSH_PRIVATE_KEY }}
          EOF
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p 2222 ${{ secrets.PRIVATE_HOST }} >> ~/.ssh/known_hosts
          printf "Host %s\n  HostName %s\n  Port 2222\n  IdentityFile ~/.ssh/id_rsa\n" \
            "${{ secrets.PRIVATE_HOST }}" "${{ secrets.PRIVATE_HOST }}" > ~/.ssh/config
            
      # Checkout the actual application code
      - name: Checkout real code
        run: |
          git clone --branch ${{ github.event.inputs.branch }} --single-branch \
            ${{ secrets.PRIVATE_REPO_FULL_NAME }} real-code

      # Install JS dependencies
      - name: Install JS dependencies
        run: yarn --cwd real-code install --frozen-lockfile

      # Set up Ruby and Fastlane
      - name: Setup Ruby & Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4.4"
      - name: Install Bundler
        working-directory: real-code/fastlane
        run: |
          gem install bundler
          bundle config set path 'vendor/bundle'
          bundle install --jobs 4 --retry 3

      # Install CocoaPods dependencies
      - name: iOS Pod install
        working-directory: real-code/ios
        run: pod install

      # Build and upload AdHoc via Fastlane
      - name: Build & AdHoc via Fastlane
        working-directory: real-code/fastlane
        env:
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
          BUNDLE_ID_STAGING: ${{ secrets.BUNDLE_ID_STAGING }}
          BUNDLE_ID_LIVE: ${{ secrets.BUNDLE_ID_LIVE }}
          DIAWI_API_TOKEN: ${{ secrets.DIAWI_API_TOKEN }}
          GDRIVE_FOLDER_STAGING_ID: ${{ secrets.GDRIVE_FOLDER_STAGING_ID }}
          GDRIVE_FOLDER_LIVE_ID: ${{ secrets.GDRIVE_FOLDER_LIVE_ID }}
          FASTLANE_DISABLE_UPDATE_CHECK: true
        run: bundle exec fastlane ios adhoc env:${{ github.event.inputs.environment }}

      - name: Upload Gym log as artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gym-log
          path: "/Users/runner/Library/Logs/gym/TemoorstAppDevelopment-TemoorstApp Development Release.log"

      # Upload IPA artifact for debugging/storage
      # - name: Upload IPA artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ios-ipa
      #     path: real-code/ios/build/*.ipa

  # android-adhoc:
  #   name: Android AdHoc Build 
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Checkout this config repository
  #     - name: Checkout CI config
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 1

  #     # Setup SSH for private repo
  #     - name: Setup SSH for private repo
  #       run: |
  #         mkdir -p ~/.ssh
  #         cat << 'EOF' > ~/.ssh/id_rsa
  #         ${{ secrets.SSH_PRIVATE_KEY }}
  #         EOF
  #         chmod 600 ~/.ssh/id_rsa
  #         ssh-keyscan -p 2222 ${{ secrets.PRIVATE_HOST }} >> ~/.ssh/known_hosts
  #         printf "Host %s\n  HostName %s\n  Port 2222\n  IdentityFile ~/.ssh/id_rsa\n" \
  #           "${{ secrets.PRIVATE_HOST }}" "${{ secrets.PRIVATE_HOST }}" > ~/.ssh/config

  #     # Checkout the actual application code
  #     - name: Checkout real code
  #       run: |
  #         git clone --branch ${{ github.event.inputs.branch }} --single-branch \
  #           ${{ secrets.PRIVATE_REPO_SSH_URL }} real-code

  #     # Install JS dependencies
  #     - name: Install JS dependencies
  #       run: yarn --cwd real-code install --frozen-lockfile

  #     # Set up Ruby and Fastlane
  #     - name: Setup Ruby & Fastlane
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: "3.x"
  #     - name: Install Bundler
  #       run: |
  #         cd real-code
  #         gem install bundler
  #         bundle install

  #     # Build and upload AdHoc via Fastlane
  #     - name: Build & AdHoc via Fastlane
  #       working-directory: real-code
  #       env:
  #         FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
  #         MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  #         TEAM_ID: ${{ secrets.TEAM_ID }}
  #         BUNDLE_ID_STAGING: ${{ secrets.BUNDLE_ID_STAGING }}
  #         BUNDLE_ID_LIVE: ${{ secrets.BUNDLE_ID_LIVE }}
  #         DIAWI_API_TOKEN: ${{ secrets.DIAWI_API_TOKEN }}
  #         GDRIVE_FOLDER_STAGING_ID: ${{ secrets.GDRIVE_FOLDER_STAGING_ID }}
  #         GDRIVE_FOLDER_LIVE_ID: ${{ secrets.GDRIVE_FOLDER_LIVE_ID }}
  #       run: bundle exec fastlane android adhoc env:${{ github.event.inputs.environment }}

      # Upload APK artifact for debugging/storage
      # - name: Upload APK artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: android-apk
      #     path: real-code/android/app/build/outputs/apk/**/*.apk
